
server {
  server_name *.mysmallbiznis.test;
  listen 80;
  location / {
    return 301 https://$host$request_uri;
  }
}

server {

    server_name *.mysmallbiznis.test;

    # listen 80;
    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate   /Users/taufiktriantono/go/src/microservice-demo/internal/smallbiz/src/smallbiznis-go-server/infra/cert/_wildcard.mysmallbiznis.test.pem;
    ssl_certificate_key   /Users/taufiktriantono/go/src/microservice-demo/internal/smallbiz/src/smallbiznis-go-server/infra/cert/_wildcard.mysmallbiznis.test-key.pem;

    # Get the actual IP of the client through load balancer in the logs
    real_ip_header     X-Forwarded-For;
    set_real_ip_from   0.0.0.0/0;

    add_header Access-Control-Allow-Origin $http_origin;
    add_header Access-Control-Allow-Headers *;

    # add_header X-Frame-Options "SAMEORIGIN"
    # add_header X-Frame-Options "ALLOW-FROM https://manage.smallbiznis.test";
    # add_header Content-Security-Policy "frame-ancestors https://manage.smallbiznis.test";

    add_header X-Frame-Options "ALLOW-FROM https://manage.smallbiznis.test";
    add_header Content-Security-Policy "frame-ancestors https://manage.smallbiznis.test";

    # This header enables the Cross-site scripting (XSS) filter
    add_header X-XSS-Protection "1; mode=block";
    
    # This will enforce HTTP browsing into HTTPS and avoid ssl stripping attack
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";
    
    add_header Referrer-Policy "no-referrer-when-downgrade";
    
    # Enables response header of "Vary: Accept-Encoding"
    gzip_vary on;

    # root /usr/local/var/www/out;
    # root /Users/taufiktriantono/go/src/microservice-demo/internal/smallbiz/src/smallbiznis-go-server/src/storefront-nextjs;

    access_log logs/$host;
    error_log  logs/$host;

    location / {
      proxy_pass http://localhost:3000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
    }

    location ~ /\.(?!well-known).* {
        deny all;
    }

    error_page 404 /404.html;
    location = /404.html {
        internal;
    }

    error_page 500 /500.html;
    location = /500.html {
        internal;
    }
}